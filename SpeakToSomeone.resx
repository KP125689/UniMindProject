<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="backarrow2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>